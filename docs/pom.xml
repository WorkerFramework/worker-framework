<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015-2024 Open Text.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.workerframework</groupId>
    <artifactId>worker-framework-docs</artifactId>
    <packaging>pom</packaging>

    <parent>
        <groupId>com.github.workerframework</groupId>
        <artifactId>worker-framework-aggregator</artifactId>
        <version>8.2.0-SNAPSHOT</version>
    </parent>

    <properties>
        <maven.install.skip>true</maven.install.skip>
        <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
    </properties>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- Use a Docker image to do the compilation -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>docker-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>docker-stop</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <containerNamePattern>%a-%t</containerNamePattern>
                    <images>
                        <!-- Used to provide the source code to the compiler -->
                        <image>
                            <alias>source-code</alias>
                            <name>${project.artifactId}-source-code:${project.version}</name>
                            <build>
                                <from>${projectDockerRegistry}/library/busybox</from>
                                <assembly>
                                    <exportTargetDir>true</exportTargetDir>
                                    <targetDir>/data</targetDir>
                                    <inline xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                            xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
                                            xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2
                                                                http://maven.apache.org/xsd/assembly-1.1.2.xsd">
                                        <fileSets>
                                            <fileSet>
                                                <useDefaultExcludes>false</useDefaultExcludes>
                                                <excludes>
                                                    <exclude>pom.xml</exclude>
                                                    <exclude>target/**</exclude>
                                                </excludes>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                        </image>

                        <!-- Used to allow the file generated by the compiler to be downloaded -->
                        <image>
                            <alias>web-server</alias>
                            <name>${projectDockerRegistry}/library/httpd</name>
                            <run>
                                <ports>
                                    <port>webServerPort:80</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>/usr/local/apache2/htdocs</volume>
                                    </bind>
                                </volumes>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${webServerPort}</url>
                                    </http>
                                </wait>
                            </run>
                        </image>

                        <!-- Used to compile the source code -->
                        <image>
                            <alias>compile-source</alias>
                            <name>${projectDockerRegistry}/cafapi/doc-site-compiler</name>
                            <run>
                                <env>
                                    <!-- Enable internet access -->
                                    <http_proxy>${env.HTTP_PROXY}</http_proxy>
                                    <https_proxy>${env.HTTPS_PROXY}</https_proxy>
                                    <no_proxy>${env.NO_PROXY}</no_proxy>

                                    <!-- Place the target file in the web server's public folder -->
                                    <TARGET_FILE>/usr/local/apache2/htdocs/docs-site.tar.gz</TARGET_FILE>
                                </env>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <volumes>
                                    <from>
                                        <image>source-code</image>
                                        <image>web-server</image>
                                    </from>
                                </volumes>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${webServerPort}/docs-site.tar.gz</url>
                                    </http>
                                    <time>600000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                    <removeVolumes>true</removeVolumes>
                </configuration>
            </plugin>

            <!-- Download the target file -->
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-target-file</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <outputFileName>${project.build.finalName}.tar.gz</outputFileName>
                            <overwrite>true</overwrite>
                            <skipCache>true</skipCache>
                            <url>http://${docker.host.address}:${webServerPort}/docs-site.tar.gz</url>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- In this project, only include the project file itself when checking license headers -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <licenseSets>
                        <licenseSet>
                            <includes>
                                <include>pom.xml</include>
                            </includes>
                        </licenseSet>
                    </licenseSets>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>use-default-fixed-ports</id>
            <properties>
                <webServerPort>9084</webServerPort>
            </properties>
        </profile>
    </profiles>

</project>
