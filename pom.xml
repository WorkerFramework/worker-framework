<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hpe.caf.worker</groupId>
    <artifactId>worker-example-container</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <caf.worker-framework.version>10.2</caf.worker-framework.version>
        <caf.config.impl>config-file</caf.config.impl>
        <caf.codec.impl>codec-json</caf.codec.impl>
        <caf.worker-store.impl>worker-store-cs</caf.worker-store.impl>
        <caf.worker-queue.impl>worker-queue-rabbit</caf.worker-queue.impl>
        <test.data>${project.basedir}/test-data</test.data>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.source.version>2.4</maven.source.version>
        <maven.javadoc.version>2.10.3</maven.javadoc.version>
        <maven.failsafe.version>2.19</maven.failsafe.version>
        <maven.compiler.version>3.3</maven.compiler.version>
        <maven.resources.version>2.7</maven.resources.version>
        <docker.maven.version>0.13.6</docker.maven.version>
        <docker.dev.repo>rh7-artifactory.hpswlabs.hp.com:8443</docker.dev.repo>
        <tini.version>0.6</tini.version>
        <marathon.client.version>0.4.9</marathon.client.version>
        <worker-example.container.name>caf/worker-example:${project.version}</worker-example.container.name>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.hpe.caf.worker</groupId>
                <artifactId>worker-framework</artifactId>
                <version>10.3-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>cmbg-maven-thirdparty</id>
            <name>Cambridge Nexus 3rd Party</name>
            <url>http://cmbg-maven.autonomy.com/nexus/content/repositories/thirdparty</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>standard-worker-container</artifactId>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.github.krallin</groupId>
            <artifactId>tini</artifactId>
            <scope>runtime</scope>
            <type>exe</type>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>worker-testing-integration</artifactId>
            <version>1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>worker-testing-example</artifactId>
            <version>1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>worker-example</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <docker.host.address>${docker.host.address}</docker.host.address>
                        <worker.adminport>${worker.adminport}</worker.adminport>
                        <rabbitmq.node.port>${rabbitmq.node.port}</rabbitmq.node.port>
                        <rabbitmq.ctrl.port>${rabbitmq.ctrl.port}</rabbitmq.ctrl.port>
                        <input.folder>${test.data}</input.folder>
                        <expected.folder>${test.data}</expected.folder>
                        <datastore.container.id>${datastore.container.id}</datastore.container.id>
                        <datastore.enabled>false</datastore.enabled>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <CAF_APPNAME>test/worker-example</CAF_APPNAME>
                        <CAF_CONFIG_PATH>${project.basedir}/test-configs</CAF_CONFIG_PATH>
                    </environmentVariables>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*Test.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testResources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>prepare-runtime</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeTransitive>false</excludeTransitive>
                            <includeArtifactIds>jce_policy</includeArtifactIds>
                            <includes>**\/*</includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>



            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>add-integration-test-source-as-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-integration-test-resource</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/integration-test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>



            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.version}</version>
                <executions>
                    <execution>
                        <id>upload-docker-container</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <registry>${docker.dev.repo}</registry>
                            <image>example-worker</image>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <watchInterval>500</watchInterval>
                    <logDate>default</logDate>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <alias>rabbitmq</alias>
                            <name>rabbitmq:3-management</name>
                            <run>
                                <ports>
                                    <port>${rabbitmq.ctrl.port}:15672</port>
                                    <port>${rabbitmq.node.port}:5672</port>
                                </ports>
                                <wait>
                                    <log>Server startup complete</log>
                                    <http>
                                        <url>http://${docker.host.address}:${rabbitmq.ctrl.port}</url>
                                    </http>
                                    <time>12000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>

                        <image>
                            <alias>config</alias>
                            <name>${project.artifactId}-test-config:${project.version}</name>
                            <build>
                                <maintainer>conal.smith@hpe.com</maintainer>
                                <assembly>
                                    <basedir>/config</basedir>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>test-configs</directory>
                                                <outputDirectory>/</outputDirectory>
                                                <includes>
                                                    <include>*</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                        </image>
                        <image>
                            <alias>example-worker</alias>
                            <name>${worker-example.container.name}</name>
                            <build>
                                <maintainer>conal.smith@hpe.com</maintainer>
                                <from>java:8</from>
                                <tags>
                                    <tag>${version.major}</tag>
                                    <tag>${version.major.minor}</tag>
                                    <tag>latest</tag>
                                </tags>
                                <labels>
                                    <caf.worker-framework.version>${caf.worker-framework.version}</caf.worker-framework.version>
                                    <caf.worker-queue.impl>${caf.worker-queue.impl}</caf.worker-queue.impl>
                                    <caf.worker-store.impl>${caf.worker-store.impl}</caf.worker-store.impl>
                                    <caf.config.impl>${caf.config.impl}</caf.config.impl>
                                    <caf.codec.impl>${caf.codec.impl}</caf.codec.impl>
                                </labels>
                                <entryPoint>
                                    <exec>
                                        <args>/maven/tini-${tini.version}.exe</args>
                                        <args>-v</args>
                                        <args>--</args>
                                        <args>/maven/worker.sh</args>
                                    </exec>
                                </entryPoint>
                                <assembly>
                                    <mode>tar</mode>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>target/dependency/UnlimitedJCEPolicyJDK8</directory>
                                                <outputDirectory>/usr/java/default/jre/lib/security/
                                                </outputDirectory>
                                                <includes>
                                                    <include>*.jar</include>
                                                </includes>
                                            </fileSet>
                                            <fileSet>
                                                <lineEnding>unix</lineEnding>
                                                <includes>
                                                    <include>*.sh</include>
                                                </includes>
                                                <fileMode>0755</fileMode>
                                            </fileSet>
                                            <fileSet>
                                                <lineEnding>unix</lineEnding>
                                                <includes>
                                                    <include>*.yaml</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                        <dependencySets>
                                            <dependencySet>
                                                <useProjectArtifact>false</useProjectArtifact>
                                                <scope>runtime</scope>
                                                <excludes>
                                                    <exclude>com.github.krallin:tini</exclude>
                                                </excludes>
                                            </dependencySet>
                                            <dependencySet>
                                                <useProjectArtifact>false</useProjectArtifact>
                                                <fileMode>0755</fileMode>
                                                <includes>
                                                    <include>com.github.krallin:tini</include>
                                                </includes>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                </assembly>
                            </build>
                            <run>
                                <ports>
                                    <port>${worker.adminport}:8081</port>
                                </ports>
                                <env>
                                    <CAF_APPNAME>test/worker-example</CAF_APPNAME>
                                    <CAF_CONFIG_PATH>/config</CAF_CONFIG_PATH>
                                </env>
                                <volumes>
                                    <from>
                                        <image>config</image>
                                    </from>
                                </volumes>
                                <links>
                                    <link>rabbitmq</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${worker.adminport}</url>
                                    </http>
                                    <time>12000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>cmbg-maven-releases</id>
            <name>Internal Releases</name>
            <url>http://cmbg-maven.autonomy.com/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>cmbg-maven-snapshots</id>
            <name>Internal Snapshots</name>
            <url>http://cmbg-maven.autonomy.com/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <ciManagement>
        <system>hudson</system>
        <url>http://cafbuilder.hpswlabs.hp.com:8080/job/worker-example-container/</url>
    </ciManagement>

</project>